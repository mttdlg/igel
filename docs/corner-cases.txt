What should {} (open-close brace) map to?
It currently maps to:
(list (list))
Just (list) is better, perhaps.
The concept is that one uses {} when
random empty lists are irrelevant, otherwise you really
use nested [@ ... ] or whatever is going to represent lists.

-- Old ramblings:
Sort of makes sense, I'd say?
If we change the definition to make it map to '(), how should one
be able to obtain (list (list)) by using curly braces? {;}, perhaps?
Hm. If } is terminator, there is no choice: "{" opens a list, "}"
'terminates' both the current list and the list-of-lists. Therefore,
to be able to have (list), we'd need to find a way to not even make a list /begin/.
Perhaps 'at least a non-whitespace character begins a list'?
Semicolon terminates AND OPENS if not open.
{} -> (list)
{ } -> (list) ?
{;} -> (list (list))
{foo} -> (list (list foo))
{foo;} -> (list (list foo))
{foo;bar} -> (list (list foo bar))
